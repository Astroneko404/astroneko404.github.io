I"á<p>Krumhansl-Schmuckler algorithm is a key finding algorithm based on pitch class distribution, that calculates the correlation between the pitch class distribution vector, and each of the 12 major and 12 minor profile vectors.</p>

<p>The full Python code could be found on <a href="https://gist.github.com/Astroneko404/1dcde11576e510e964882bbbafaeb050" target="_blank">my GH Gist</a>.</p>

<h2 id="retrieve-pitch-class-distribution-from-midi">Retrieve Pitch Class Distribution from MIDI</h2>
<p>Letâ€™s use the main theme music of Metro-Cross as an example, and itâ€™s MIDI file could be downloaded <a href="http://www5.plala.or.jp/m5ka1/memo/midiroom/mtrcrsr1.zip" target="_blank">here</a>:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/qh2jOHHsQms" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<p>(Spoiler: Itâ€™s in A minor.)</p>

<p>First we use mido to read the MIDI file:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from mido import MidiFile
midi_file = MidiFile("[midi]/metro_cross_main.mid")
</code></pre></div></div>

<p>then retrieve the MIDI notes:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def getAllMidiNotes(mid: MidiFile):
    """
    Retrieve midi note information
    :param mid: mido MidiFile
    :return: A list containing all motes with their midi notes number and time
    """
    midi_notes = []
    for track in mid.tracks:
        for msg in track:
            msg_dict = msg.dict()
            if msg_dict["type"] == "note_on" and msg_dict["channel"] != 9:  # Remove the percussion channel
                midi_notes.append([msg_dict["note"], msg_dict["time"]])
    return midi_notes
</code></pre></div></div>

<p>Remember that the 10th channel is reserved for percussion, we have to exclude this channel.</p>

:ET